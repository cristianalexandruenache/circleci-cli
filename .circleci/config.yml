version: 2.1

orbs:
  codecov: circleci/codecov-clojure@0.0.4
  shellcheck: circleci/shellcheck@1.2.0
  slack: circleci/slack@volatile

executors:
  go:
    docker:
      - image: circleci/golang:1.11
    environment:
      CGO_ENABLED: 0

commands:
  gomod:
    steps:
      - restore_cache:
          keys: [v1-gomod-]
      - run:
          name: Download go module dependencies
          command: go mod download
      - save_cache:
          key: v1-gomod-{{ checksum "go.sum" }}
          paths: [/go/pkg/mod]

jobs:
  test:
    executor: go
    steps:
      - checkout
      - gomod
      - run: make test
      - slack/notify

  coverage:
    executor: go
    environment:
      CGO_ENABLED: 1
    steps:
      - checkout
      - gomod
      - run: make cover
      - store_artifacts:
          path: ./coverage.txt
          destination: coverage.txt
      - codecov/upload:
          path: coverage.txt
      - slack/notify

  docs:
    executor: go
    steps:
      - checkout
      - run: sudo apt-get install pandoc
      - gomod
      - run: go run main.go usage
      - store_artifacts:
          path: ./docs
          destination: docs
      - run: ./.circleci/generate-docs.sh
      - run: ./.circleci/deploy-gh-pages.sh
      - slack/notify

  lint:
    docker:
      - image: supinf/gometalinter:latest
    environment:
      CGO_ENABLED: 0
    working_directory: /go/src/github.com/CircleCI-Public/circleci-cli
    steps:
      - checkout
      - run:
          name: Install deps to use with gometalinter
          command: |
            apk --no-cache add --virtual git
            go get -u github.com/golang/dep/cmd/dep
            dep init
      - run: gometalinter ./...
      - slack/notify

  deploy:
    executor: go
    environment:
      GORELEASER_URL: https://github.com/goreleaser/goreleaser/releases/download/v0.94.0/goreleaser_amd64.deb
    steps:
      - checkout
      - restore_cache:
          keys: [v3-goreleaser-]
      - run:
          name: Install GoReleaser
          command: |
            [ -f ~/goreleaser_amd64.db ] || curl --silent --location --fail --retry 3 $GORELEASER_URL > ~/goreleaser_amd64.deb
            sudo apt install ~/goreleaser_amd64.deb
      - run:
          name: Tag Repo
          command: |
            git config --global user.email $GH_EMAIL
            git config --global user.name $GH_NAME
            git tag -a      "v0.1.$CIRCLE_BUILD_NUM" -m "Release v0.1.$CIRCLE_BUILD_NUM"
            git push origin "v0.1.$CIRCLE_BUILD_NUM"
      - gomod
      - run:
          name: Release
          command: goreleaser
      - setup_remote_docker:
          docker_layer_caching: true
      - run:
          name: Docker Login
          command: docker login -u $DOCKER_HUB_USERNAME -p $DOCKER_HUB_PASSWORD
      - run:
          name: Build Latest Docker Image
          command: |
            docker build -t circleci/circleci-cli:0.1.$CIRCLE_BUILD_NUM .
            docker push     circleci/circleci-cli:0.1.$CIRCLE_BUILD_NUM
            docker tag      circleci/circleci-cli:0.1.$CIRCLE_BUILD_NUM circleci/circleci-cli:latest
            docker push     circleci/circleci-cli:latest
      - run:
          name: Build Alpine Docker Image
          command: |
            docker build -t circleci/circleci-cli:0.1.$CIRCLE_BUILD_NUM-alpine --file Dockerfile.alpine .
            docker run --rm circleci/circleci-cli:0.1.$CIRCLE_BUILD_NUM-alpine update check
            docker push     circleci/circleci-cli:0.1.$CIRCLE_BUILD_NUM-alpine
            docker tag      circleci/circleci-cli:0.1.$CIRCLE_BUILD_NUM-alpine circleci/circleci-cli:alpine
            docker push     circleci/circleci-cli:alpine
      - save_cache:
          key: v3-goreleaser-{{ checksum "~/goreleaser_amd64.deb" }}
          paths: [~/goreleaser_amd64.deb]
      - persist_to_workspace:
          root: .
          paths:
            - "dist"
      - store_artifacts:
          path: ./dist
          destination: dist
      - slack/notify

  snap:
    docker:
      - image: cibuilds/snapcraft:stable
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run: |
          export TAG=$(./dist/linux_amd64/circleci version)
          sed -i -- "s/%CLI_VERSION_PLACEHOLDER%/$TAG/g" snap/snapcraft.yaml
      - run: snapcraft
      - run:
          name: Publish to store
          command: |
            mkdir .snapcraft
            echo $SNAPCRAFT_LOGIN_FILE | base64 --decode --ignore-garbage > .snapcraft/snapcraft.cfg
            snapcraft push *.snap --release stable
      - slack/notify

  brew-deploy:
    macos:
      xcode: "10.0.0"
    environment:
      - USER: circleci
      - TRAVIS: circleci
      - DESTDIR: /Users/distiller/dest
    steps:
      - checkout
      - run: |
          mkdir $DESTDIR
          curl -fLSs https://circle.ci/cli | DESTDIR="$DESTDIR" bash
      - run: |
          git config --global user.email "$GH_EMAIL" > /dev/null 2>&1
          git config --global user.name "$GH_NAME" > /dev/null 2>&1
      - run: brew --version
      - run: ./.circleci/brew-deploy.sh
      - slack/notify

workflows:
  version: 2
  ci:
    jobs:
      - shellcheck/check:
          exclude: ./vendor/*
      - test
      - coverage
      - lint
      - docs:
          requires:
            - deploy
      - snap:
          requires:
            - deploy
      - deploy:
          requires:
            - test
            - coverage
            - lint
            - shellcheck/check
          filters:
            branches:
              only: master
  weekly:
    triggers:
      - schedule:
          cron: "0 23 * * 0"
          filters:
            branches:
              only:
                - master
    jobs:
      - run-brew-deploy-gate:
          type: approval
      - brew-deploy:
          requires:
            - run-brew-deploy-gate
